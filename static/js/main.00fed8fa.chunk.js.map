{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","src","frameBorder","width","height","App","useState","scheme","setScheme","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","fetchData","go","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"wNAeeA,EAVF,SAAC,GAAD,EAAGC,GAAH,OAEZ,wBAAQC,IAAI,qFAAqFC,YAAY,IAAIC,MAAM,OAAOC,OAAO,SC4CvHC,EA3CH,WACX,MAA4BC,mBAAS,gBAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,QAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA+BJ,mBAAS,MAAxC,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4BN,mBAAS,MAArC,mBAAOO,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CAOf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CAPe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACtB,yBAATD,GACHd,EAAUe,EAAKhB,WAHF,mCAYfiB,KACE,IAMH,OACC,cAAC,IAAD,CAAgBjB,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAaM,OAAQA,EAArB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAMJ,YAAaA,EAAnB,SACC,cAAC,EAAD,CAAMT,GAAG,OAAOW,YAAaA,EAAac,GAXtC,SAAAC,GACVhB,EAAegB,EAAEC,cAAcC,QAAQC,oBCxBzCZ,IAAOC,KAAK,gBAEZY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.00fed8fa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\nconst Home = ({ id }) => (\n\n\t<iframe src='https://my.spline.design/officedesktopsoundscopy-87a6594c1536b4b2cf2c810d45a9667a/' frameBorder='0' width='100%' height='99%'>\n\t</iframe>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n//if (process.env.NODE_ENV === \"development\") {\n//  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n//}\n"],"sourceRoot":""}